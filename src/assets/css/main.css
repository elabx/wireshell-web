@keyframes bounce-forward {
  0%,
  20%,
  50%,
  80%,
  100% {
    transform: translateX(0); }
  40% {
    transform: translateX(10px); }
  60% {
    transform: translateX(6px); } }

@keyframes bounce-back {
  0%,
  20%,
  50%,
  80%,
  100% {
    transform: translateX(0); }
  40% {
    transform: translateX(-10px); }
  60% {
    transform: translateX(-6px); } }

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Correct the line height in all browsers.
 * 3. Prevent adjustments of font size after orientation changes in IE and iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  line-height: 1.15;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 3 */
  -webkit-text-size-adjust: 100%;
  /* 3 */ }

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block; }

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none; }

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold; }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

html {
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
      -ms-text-size-adjust: 100%;
          text-size-adjust: 100%;
  font-kerning: normal;
  font-variant-ligatures: common-ligatures contextual;
  font-feature-settings: 'kern', 'liga', 'clig', 'calt'; }

*, *::before, *::after {
  box-sizing: inherit; }

body,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
dl,
dd,
ol,
ul,
hr,
form,
fieldset,
legend,
figure,
table,
th,
td,
caption,
hr {
  margin: 0;
  padding: 0; }

textarea {
  resize: vertical; }

fieldset {
  border: 0; }

label {
  display: block;
  cursor: pointer; }

[unselectable] {
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; }

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle; }

audio,
iframe,
img,
video {
  max-width: 100%;
  height: auto; }

nav ul,
nav ol,
fieldset ul,
fieldset ol {
  list-style: none; }

table {
  width: 100%; }

td,
th {
  vertical-align: top; }

th {
  text-align: left; }

hr {
  display: block;
  height: 1px;
  margin: 0 auto;
  border: 0;
  background: currentColor; }

html {
  color: white;
  background-color: #3b3939;
  font-size: 16px; }

body {
  font-family: Helvetica, Arial, sans-serif;
  font-weight: 400;
  font-style: normal;
  line-height: 1.5;
  background-color: #3b3939; }
  .fonts-loaded body {
    font-family: "Source Sans Pro", Helvetica, Arial, sans-serif; }
  @media print {
    body * {
      display: none; }
    body::after {
      content: 'Please, do not waste paper by printing webpages.'; } }

::-moz-selection {
  background-color: #d52978;
  color: #6db6f0;
  text-shadow: none; }

::selection {
  background-color: #d52978;
  color: #6db6f0;
  text-shadow: none; }

@font-face {
  font-family: "Source Sans Pro";
  font-weight: 600;
  font-style: normal;
  src: url("../fonts/sourcesanspro-semibold.woff2") format("woff2"), url("../fonts/sourcesanspro-semibold.woff") format("woff"); }

@font-face {
  font-family: "Source Sans Pro";
  font-weight: 400;
  font-style: normal;
  src: url("../fonts/sourcesanspro-regular.woff2") format("woff2"), url("../fonts/sourcesanspro-regular.woff") format("woff"); }

@font-face {
  font-family: "Source Sans Pro";
  font-weight: 300;
  font-style: normal;
  src: url("../fonts/sourcesanspro-light.woff2") format("woff2"), url("../fonts/sourcesanspro-light.woff") format("woff"); }

.link--more, .wrapper--input {
  position: relative;
  top: auto;
  left: auto;
  padding-left: 0.75rem;
  padding-top: 0.45rem;
  padding-bottom: 0.45rem;
  padding-right: 0.9rem;
  border-left: 2px solid #c83679;
  border-right: 2px solid #ec1276;
  border-bottom: 0;
  border-top: 0;
  font-weight: 300;
  display: inline-block; }
  .link--more::before, .wrapper--input::before, .link--more::after, .wrapper--input::after {
    content: '';
    height: 2px;
    background-image: linear-gradient(90deg, #c83679, #ec1276); }
  .link--more::before, .wrapper--input::before {
    position: absolute;
    right: 0;
    left: 0;
    top: 0; }
  .link--more::after, .wrapper--input::after {
    position: absolute;
    right: -2px;
    left: -2px;
    bottom: 0; }

button,
input,
select,
textarea {
  background-color: transparent; }

[type='text'],
[type='tel'],
[type='email'],
[type='search'],
[type='number'],
[type='password'],
select,
textarea {
  padding-top: 0.375rem;
  padding-right: 0.75rem;
  padding-bottom: 0.375rem;
  padding-left: 0.75rem;
  border-color: #d52978;
  width: 100%;
  border: 1px solid;
  border-radius: 0;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none; }
  [type='text']:hover, [type='text']:active, [type='text']:focus,
  [type='tel']:hover,
  [type='tel']:active,
  [type='tel']:focus,
  [type='email']:hover,
  [type='email']:active,
  [type='email']:focus,
  [type='search']:hover,
  [type='search']:active,
  [type='search']:focus,
  [type='number']:hover,
  [type='number']:active,
  [type='number']:focus,
  [type='password']:hover,
  [type='password']:active,
  [type='password']:focus,
  select:hover,
  select:active,
  select:focus,
  textarea:hover,
  textarea:active,
  textarea:focus {
    border-color: #d52978; }

label {
  padding-bottom: 0.75rem;
  padding-right: 0.75rem; }

input {
  padding-right: 0.75rem;
  padding-left: 0.75rem;
  padding-bottom: 0.165rem;
  padding-top: 0.195rem; }

h1 {
  z-index: 1;
  font-size: 3rem; }
  .page--home h1 {
    display: none; }

h2 {
  font-size: 2rem;
  color: #6db6f0; }
  .page--home h2 {
    text-transform: lowercase; }

h3 {
  padding-top: 0.75rem;
  font-size: 1.5rem;
  font-weight: 500; }
  h3 span {
    padding: 0.375rem;
    padding-right: 0.525rem;
    border-color: #6db6f0;
    font-style: italic;
    font-weight: 300;
    text-transform: capitalize;
    white-space: nowrap;
    border-style: solid;
    border-width: 1px;
    display: inline; }

h4 {
  font-size: 1.1875rem; }
  .wrapper--main h4 {
    color: #6db6f0; }
  .wrapper--sub h4 {
    color: #d52978; }

h5 {
  font-size: 1rem;
  font-weight: 300; }

h6 {
  font-size: 0.875rem; }

a {
  color: white;
  border-color: #6db6f0;
  text-decoration: none;
  border-bottom-width: 1px;
  border-bottom-style: solid; }
  a:hover, a:active, a:focus {
    color: #6db6f0; }

.link--more:hover, .link--more:active, .link--more:focus {
  color: white;
  background-image: linear-gradient(90deg, #c83679, #ec1276); }

.link--more::-moz-selection {
  color: white;
  background-image: linear-gradient(90deg, #c83679, #ec1276); }

.link--more::selection {
  color: white;
  background-image: linear-gradient(90deg, #c83679, #ec1276); }

.link--forward, .link--back {
  border: 0; }
  .link--forward .icon, .link--back .icon {
    width: 7px;
    height: 16px; }

.link--forward:hover .icon, .link--forward:active .icon, .link--forward:focus .icon {
  animation: bounce-forward 1s infinite; }

.link--forward .icon {
  margin-left: 0.3rem; }

.link--back:hover .icon, .link--back:active .icon, .link--back:focus .icon {
  animation: bounce-back 1s infinite; }

.link--back .icon {
  margin-right: 0.3rem; }

li ul {
  padding-left: 1.5rem;
  padding-top: 0.75rem; }

.content ol li {
  padding-bottom: 1.5rem; }

.content ul {
  list-style: none; }

h1,
h2,
h4,
h5,
h6,
ul,
ol,
dl,
blockquote,
p,
hr,
table,
fieldset,
figure,
pre,
cite,
.rhythm {
  margin-bottom: 1.5rem; }

h3 {
  margin-bottom: 2.25rem; }

h4 {
  margin-bottom: 0.75rem; }

.animate {
  transition: opacity 0.4s ease-in, transform 0.4s ease-in; }

.box {
  position: relative;
  display: block;
  overflow: hidden; }
  .box::before {
    position: relative;
    display: block;
    content: ''; }
    .box::before::before {
      padding-top: 100%; }

.box__content {
  display: block;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0; }

.box--2-1::before {
  padding-top: 50%; }

.box--4-3::before {
  padding-top: 75%; }

.button {
  color: white;
  display: inline-block;
  cursor: pointer; }

.button--blank {
  margin: 0;
  color: white;
  background: transparent;
  border: 0;
  outline: 0;
  font-style: normal; }

.grid {
  margin-left: -1.5rem;
  padding: 0;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-pack: justify;
      justify-content: space-between;
  list-style: none; }
  @media (min-width: 45em) {
    .grid {
      -ms-flex-direction: row;
          flex-direction: row; } }

.grid__column {
  padding-left: 1.5rem;
  -ms-flex: 1;
      flex: 1; }

.grid--custom {
  -ms-flex-direction: row;
      flex-direction: row; }
  .grid--custom > .grid__column {
    -ms-flex: 1 0 300px;
        flex: 1 0 300px; }

.icon {
  position: relative;
  top: -0.0625em;
  display: inline-block;
  width: 1em;
  height: 1em;
  fill: currentColor; }

.logo {
  display: inline-block;
  border: 0; }
  @media (min-width: 60em) {
    .logo {
      padding-top: 0.75rem; } }
  .logo:hover, .logo:active, .logo:focus {
    text-decoration: none; }
  .logo--svg {
    width: 3rem;
    vertical-align: bottom; }
    @media (min-width: 60em) {
      .logo--svg {
        width: 4.5rem; } }
    .no-touch .logo--svg:hover, .no-touch .logo--svg:active, .no-touch .logo--svg:focus {
      animation: wobble .3s ease-in-out alternate infinite; }
  .logo--title {
    margin-left: 0.375rem;
    color: #6db6f0;
    font-size: 2rem; }
    @media (min-width: 60em) {
      .logo--title {
        display: none; } }

@keyframes wobble {
  0% {
    transform: skewx(2deg); }
  100% {
    transform: skewx(-2deg); } }

.nav--toggle {
  position: absolute;
  top: 0;
  left: 0;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
  overflow: hidden;
  clip: rect(0 0 0 0); }

.header__nav {
  background-color: #2c2a2a;
  z-index: 30;
  height: 0;
  transform: translateY(-200%);
  transition: height .4s, transform .3s;
  overflow: hidden; }
  @media (min-width: 60em) {
    .header__nav {
      height: auto;
      transform: translateY(0%); } }
  .nav--toggle:checked ~ .header__nav {
    height: 100vh;
    width: 100vw;
    transform: translateY(0%); }

.button--nav__inner, .button--nav__inner::after, .button--nav__inner::before {
  background-color: white;
  display: block;
  width: 32px;
  height: 4px;
  border-radius: 4px;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  transition: transform .3s; }

.button--nav {
  position: absolute;
  top: 1.875rem;
  right: 1.5rem;
  z-index: 50;
  width: 32px;
  height: 24px; }
  @media (min-width: 60em) {
    .button--nav {
      display: none; } }
  .button--nav__inner {
    text-indent: -99999px; }
    .nav--toggle:checked ~ .button--nav .button--nav__inner {
      background: transparent; }
      .nav--toggle:checked ~ .button--nav .button--nav__inner::before {
        transform: rotate(-45deg); }
      .nav--toggle:checked ~ .button--nav .button--nav__inner::after {
        transform: rotate(45deg) translateX(-20%) translateY(-150%); }
    .button--nav__inner::after, .button--nav__inner::before {
      content: ''; }
    .button--nav__inner::before {
      position: absolute;
      top: 9.6px; }
    .button--nav__inner::after {
      position: absolute;
      top: 19.2px; }

.nav-main {
  padding-left: 15vw;
  padding-top: 1.5rem;
  padding-bottom: 6rem; }
  @media (min-width: 40em) {
    .nav-main {
      padding-left: 25vw; } }
  @media (min-width: 45em) {
    .nav-main {
      padding-left: 35vw; } }
  @media (min-width: 60em) {
    .nav-main {
      padding-left: 0; } }
  .nav-main__list--item > a {
    text-transform: lowercase; }
  .nav-main__list--sub > a {
    text-transform: capitalize;
    font-style: italic;
    font-weight: 300; }
  .nav-main li {
    padding-top: 0.375rem;
    padding-bottom: 0.375rem; }
  .nav-main a {
    position: relative;
    top: auto;
    left: auto;
    color: white;
    padding-right: 0.15rem;
    border: 0; }
    .nav-main a::before {
      position: absolute;
      top: 0;
      background-color: #d52978;
      z-index: -1;
      display: block;
      content: '';
      height: 20.8px;
      line-height: 20.8px;
      width: 0%;
      transition: width 0.5s ease; }
    .nav-main a:hover, .nav-main a:active {
      text-decoration: none; }
      .no-touch .nav-main a:hover::before, .no-touch .nav-main a:active::before {
        background-image: linear-gradient(90deg, #c83679, #75b5e8);
        width: 100%; }
  .nav-main .trigger--active::before {
    width: 100%; }

.link-decorated {
  border-color: #d52978;
  border: 2px dashed; }

.truncate-text {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis; }

cite {
  display: block; }
  .wrapper--main cite {
    padding-top: 3rem;
    font-size: 1.1875rem;
    font-style: normal; }

pre {
  white-space: normal; }

code {
  background-color: #2c2a2a;
  border-color: #d52978;
  padding-right: 0.15rem;
  padding-left: 0.15rem;
  font-family: 'Menlo';
  font-size: 90%;
  border-bottom-width: 1px;
  border-bottom-style: solid;
  word-break: break-word; }
  pre code {
    padding: 0.75rem;
    display: block; }

.small {
  font-size: 85%;
  font-weight: 300; }

hr {
  position: relative;
  top: auto;
  left: auto;
  margin-bottom: 1.5rem; }
  hr::after {
    position: absolute;
    right: -0.75rem;
    left: -0.75rem;
    bottom: 0;
    content: '';
    height: 1px;
    background-image: linear-gradient(90deg, #d52978, #6db6f0); }

iframe {
  width: 100%; }

.indieweb__form {
  padding-bottom: 3rem;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-align: baseline;
      align-items: baseline; }

.indieweb__nav {
  padding-bottom: 1.5rem;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-pack: justify;
      justify-content: space-between; }
  .indieweb__nav--last {
    -ms-flex-pack: end;
        justify-content: flex-end; }
  .indieweb__nav .link--back {
    transform: translateX(-0.75rem); }
  .indieweb__nav .link--forward {
    transform: translateX(0.75rem); }

.note {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem; }
  @media (min-width: 45em) {
    .note {
      padding-bottom: 3rem;
      padding-top: 2.25rem; } }
  @media (min-width: 45em) {
    .note--tags {
      padding-top: 0.225rem;
      float: right; } }
  .note--tags a {
    color: #6db6f0;
    border-bottom-width: 0; }
    .note--tags a:hover, .note--tags a:active, .note--tags a:focus {
      border-bottom-width: 1px; }
  .note--syndication {
    position: relative;
    top: auto;
    left: auto;
    border: 0;
    display: inline-block;
    height: 22.5px;
    width: 22.5px;
    vertical-align: sub; }
    .note--syndication--icon {
      position: absolute;
      bottom: 0;
      left: 0;
      height: 18px;
      width: 18px; }
      .note--syndication--icon:hover, .note--syndication--icon:active, .note--syndication--icon:focus {
        animation: fly .8s ease-in-out alternate infinite; }
        .note--syndication--icon:hover path, .note--syndication--icon:active path, .note--syndication--icon:focus path {
          animation: pulse .3s ease-in-out alternate infinite; }
  .note--location, .note--meta {
    display: inline-block;
    font-weight: 300; }
  .note--content {
    padding-top: 1.5rem;
    padding-bottom: 3rem;
    word-break: break-word;
    max-width: 48rem; }
    .note--content h2 {
      margin-bottom: 0.75rem; }
    .note--content--wrapper {
      padding-top: 1.5rem;
      padding-bottom: 1.5rem;
      display: -ms-flexbox;
      display: flex;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap; }
  .note--readon {
    padding-right: 1.5rem;
    border: 0; }
  .note--social dt,
  .note--social dd {
    display: inline-block; }
  .note--social dd {
    padding-right: 0.75rem; }

.webmention {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap; }
  .webmention--mention {
    display: block; }
  .webmention--author {
    padding-right: 0.75rem; }
    .webmention--author--photo {
      border: 0; }
      .webmention--author--photo img {
        border-radius: 100%; }
    .webmention--author--meta {
      padding-left: 1.8rem;
      display: inline-block; }
  .webmention cite {
    position: relative;
    top: auto;
    left: auto;
    padding-left: 4.5rem;
    display: inline-block;
    quotes: '\201C' '\201D';
    font-weight: 300;
    word-break: break-word; }
    .webmention cite::before {
      position: absolute;
      left: 3rem;
      content: open-quote;
      transform: scale(3);
      display: inline-block; }

@keyframes pulse {
  0% {
    d: path("M13.051,3.954c-0.481,0.213 -0.996,0.357 -1.538,0.422c0.553,-0.331 0.977,-0.856 1.177,-1.48c-0.518,0.306 -1.091,0.529 -1.701,0.65c-0.488,-0.521 -1.183,-0.846 -1.954,-0.846c-1.478,0 -2.677,1.199 -2.677,2.676c0,0.21 0.024,0.415 0.069,0.61c-2.224,-0.111 -4.197,-1.177 -5.517,-2.797c-0.231,0.395 -0.362,0.855 -0.362,1.346c0,0.929 0.473,1.748 1.191,2.228c-0.439,-0.015 -0.852,-0.136 -1.213,-0.336l0,0.033c0,1.297 0.923,2.379 2.147,2.625c-0.224,0.06 -0.461,0.094 -0.705,0.094c-0.173,0 -0.34,-0.017 -0.504,-0.05c0.341,1.064 1.329,1.838 2.5,1.859c-0.916,0.718 -2.07,1.144 -3.325,1.144c-0.216,0 -0.428,-0.013 -0.638,-0.036c1.185,0.76 2.591,1.204 4.103,1.204c4.925,0 7.617,-4.079 7.617,-7.616l-0.009,-0.347c0.526,-0.375 0.981,-0.846 1.339,-1.383Z"); }
  40% {
    d: path("M11.513,4.376c0.553,-0.331 0.977,-0.856 1.177,-1.48c-0.518,0.306 -1.091,0.529 -1.701,0.65c-0.488,-0.521 -1.183,-0.846 -1.954,-0.846c-1.478,0 -2.677,1.199 -2.677,2.676c0,0.21 0.024,0.415 0.069,0.61c-1.328,-0.065 -2.197,-0.177 -3.517,-1.797c-0.231,0.395 -0.362,0.855 -0.362,1.346c0,0.929 0.473,1.748 1.191,2.228c-0.439,-0.015 -1.213,-0.303 -1.213,-0.303c0,1.297 0.923,2.379 2.147,2.625c-0.397,0.145 -1.012,-0.077 -1.176,-0.11c-0.065,0.385 0.242,1.013 0.467,1.013c-0.916,0.718 -2.07,1.144 -3.325,1.144c-0.216,0 -0.428,-0.013 -0.638,-0.036c1.185,0.76 2.591,1.204 4.103,1.204c4.925,0 7.617,-4.079 7.617,-7.616l-0.009,-0.347c0.526,-0.375 0.981,-0.846 1.339,-1.383c-0.481,0.213 -0.996,0.357 -1.538,0.422Z"); }
  100% {
    d: path("M8.416,11.983c-1.155,0.799 -2.601,1.297 -4.32,1.297c-1.509,0 -2.913,-0.443 -4.096,-1.202c0.209,0.023 0.422,0.036 0.637,0.036c1.252,0 5.173,-0.688 5.777,-6.134c-0.045,-0.195 -0.069,-0.4 -0.069,-0.609c0,-1.475 1.197,-2.671 2.672,-2.671c0.769,0 1.463,0.324 1.95,0.844c0.609,-0.12 1.18,-0.343 1.698,-0.649c-0.2,0.623 -0.623,1.147 -1.174,1.478c0.54,-0.065 1.054,-0.209 1.534,-0.421c-0.357,0.535 -0.812,1.006 -1.337,1.38l0.009,0.346c0,0.622 -0.083,1.26 -0.247,1.89c1.354,0.932 2.955,1.382 4.55,1.331c-0.146,0.432 -0.407,0.832 -0.776,1.154c-0.7,0.608 -1.627,0.789 -2.458,0.562c0.298,0.321 0.659,0.553 1.047,0.693c-1.002,0.871 -2.422,0.884 -3.409,0.124c0.102,0.208 0.232,0.408 0.392,0.592c0.113,0.131 0.235,0.245 0.367,0.347c-0.905,0.389 -1.971,0.249 -2.747,-0.388l0,0Z"); } }

@keyframes fly {
  0% {
    bottom: 0;
    left: 0; }
  100% {
    bottom: 10px;
    left: 5px; } }

.macfront {
  margin-top: 3rem;
  position: relative;
  top: auto;
  left: auto;
  display: none;
  cursor: pointer; }
  @media (min-width: 20em) {
    .macfront {
      display: block; } }
  .macfront--isplayed .jsgif::before {
    position: absolute;
    left: 35vw;
    top: 50%;
    transform: translateY(-50%);
    content: '';
    display: block;
    border-top: 1.5rem solid transparent;
    border-bottom: 1.5rem solid transparent;
    border-left: 2.25rem solid #d52978; }
    @media (min-width: 60em) {
      .macfront--isplayed .jsgif::before {
        top: 45%;
        left: 30vw;
        transform: translateX(-50%); } }
    @media (min-width: 112.5em) {
      .macfront--isplayed .jsgif::before {
        left: 33rem; } }
  .macfront .jsgif,
  .macfront img {
    padding-left: 8vw;
    padding-top: 2vw;
    padding-bottom: 1.5rem;
    width: 68vw; }
    @media (min-width: 60em) {
      .macfront .jsgif,
      .macfront img {
        padding-left: 6.9vw;
        width: 51.2vw; } }
    @media (min-width: 112.5em) {
      .macfront .jsgif,
      .macfront img {
        padding-left: 7.8rem;
        padding-top: 2.25rem;
        width: 58.5rem; } }
    .macfront .jsgif canvas,
    .macfront img canvas {
      width: 100%; }
  .macfront::after {
    position: absolute;
    top: 0;
    left: 0;
    background: url("/assets/img/macbook-front.svg") no-repeat;
    content: '';
    width: 75vw;
    height: 43vw; }
    @media (min-width: 60em) {
      .macfront::after {
        width: 58vw;
        height: 34vw;
        max-width: 66rem;
        max-height: 38rem; } }
    @media (min-width: 112.5em) {
      .macfront::after {
        width: 58vw;
        height: 34vw; } }

.fadeout {
  display: none;
  transition: display .4s; }

.wrapper--main, .wrapper--sub {
  padding-right: 2.25rem;
  padding-left: 2.25rem;
  padding-top: 4.5rem;
  padding-bottom: 0;
  overflow: hidden;
  max-width: 1200px; }
  @media (min-width: 60em) {
    .wrapper--main, .wrapper--sub {
      margin-left: 18rem;
      padding-left: 3rem;
      padding-top: 0; } }

.wrapper--sub {
  padding-top: 6.3rem; }

.wrapper--section {
  padding-left: 2.25rem; }
  @media (min-width: 60em) {
    .wrapper--section {
      padding-left: 3rem; } }

.wrapper--hr {
  position: relative;
  top: auto;
  left: auto;
  margin-top: 1.5rem; }
  .wrapper--hr::after {
    position: absolute;
    right: -0.75rem;
    left: -0.75rem;
    bottom: 0;
    content: '';
    height: 1px;
    background-image: linear-gradient(90deg, #d52978, #6db6f0); }
  .wrapper--hr.footer::after {
    right: 1.5rem;
    left: 1.5rem; }

.wrapper--footer {
  margin-bottom: 3rem;
  padding-right: 2.25rem;
  padding-left: 2.25rem;
  padding-bottom: 3rem;
  padding-top: 1.5rem;
  max-width: 1200px; }
  @media (min-width: 60em) {
    .wrapper--footer {
      margin-left: 18rem;
      padding-left: 3rem; } }

.wrapper--part {
  padding-bottom: 4.5rem; }

.wrapper--input {
  margin-right: 0.75rem;
  padding-right: 0;
  padding-left: 0;
  padding-top: 0.27rem;
  padding-bottom: 0.27rem; }

.header {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 40;
  background-color: #2c2a2a;
  min-height: 4.5rem;
  overflow-y: scroll;
  overflow-x: hidden;
  -ms-overflow-style: none; }
  @media (min-width: 60em) {
    .header {
      padding-top: 1.5rem;
      padding-right: 4.5rem;
      padding-left: 4.5rem;
      bottom: 0;
      width: 18rem; } }
  .header__logo {
    background-color: #2c2a2a;
    z-index: 40;
    position: relative;
    top: auto;
    left: auto;
    padding-bottom: 0.9rem;
    padding-top: 0.6rem;
    padding-right: 4.5rem;
    text-align: center; }

.pagebrowser {
  padding-bottom: 1.5rem;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center; }
  .pagebrowser--current {
    color: #d52978; }
  .pagebrowser li {
    padding-right: 0.75rem; }
  .pagebrowser a {
    border: 0; }

.corner {
  position: absolute;
  right: 0;
  top: 0;
  display: block;
  border-bottom: 0;
  border-left: 80px solid transparent;
  border-top: 80px solid #d52978; }
  .corner:hover .icon, .corner:active .icon, .corner:focus .icon {
    fill: #6db6f0; }
  .corner .icon {
    fill: white;
    position: absolute;
    right: 0;
    top: 0;
    transform: rotate(45deg) translate(-54px, -38px);
    width: 2em;
    height: 2em; }

.social__list {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  list-style: none;
  -ms-flex-pack: center;
      justify-content: center; }
  .social__list li {
    padding-right: 0.75rem;
    padding-left: 0.75rem;
    padding-bottom: 1.5rem; }
    .social__list li:nth-child(1) a {
      background-image: linear-gradient(90deg, #d52978, #bb4c96); }
      .social__list li:nth-child(1) a:hover, .social__list li:nth-child(1) a:active, .social__list li:nth-child(1) a:focus {
        color: white;
        background-image: linear-gradient(90deg, #fe0075, #f90eab);
        transform: scale(1.1); }
    .social__list li:nth-child(2) a {
      background-image: linear-gradient(90deg, #ae5ea5, #a170b4); }
      .social__list li:nth-child(2) a:hover, .social__list li:nth-child(2) a:active, .social__list li:nth-child(2) a:focus {
        color: white;
        background-image: linear-gradient(90deg, #eb22d4, #b93aeb);
        transform: scale(1.1); }
    .social__list li:nth-child(3) a {
      background-image: linear-gradient(90deg, #9481c3, #8793d2); }
      .social__list li:nth-child(3) a:hover, .social__list li:nth-child(3) a:active, .social__list li:nth-child(3) a:focus {
        color: white;
        background-image: linear-gradient(90deg, #8053f2, #5e77fb);
        transform: scale(1.1); }
    .social__list li:nth-child(4) a {
      background-image: linear-gradient(90deg, #7aa4e1, #6db6f0); }
      .social__list li:nth-child(4) a:hover, .social__list li:nth-child(4) a:active, .social__list li:nth-child(4) a:focus {
        color: white;
        background-image: linear-gradient(90deg, #5c9eff, #5eb8ff);
        transform: scale(1.1); }
  .social__list a {
    border: 0;
    border-radius: 100%;
    width: 42px;
    height: 42px;
    display: inline-block;
    font-size: 0;
    transition: transform .4s ease-in, background-image .4s ease-in-out; }
    @media (min-width: 60em) {
      .social__list a {
        width: 60px;
        height: 60px; } }
  .social__list .icon {
    padding: 0.45rem;
    width: 42px;
    height: 42px; }
    @media (min-width: 60em) {
      .social__list .icon {
        padding: 0.75rem;
        width: 60px;
        height: 60px; } }

.footer {
  text-align: center; }
  .footer h3 {
    margin-bottom: 0.375rem; }
  .footer h4 {
    margin-bottom: 3rem;
    font-weight: 500; }

.clearfix::after {
  display: block;
  content: '';
  clear: both; }

.hidden {
  display: none !important;
  visibility: hidden; }

.visuallyhidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
  overflow: hidden;
  clip: rect(0 0 0 0); }
  .visuallyhidden.focusable:active, .visuallyhidden.focusable:focus {
    position: static;
    width: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    clip: auto; }

.invisible {
  visibility: hidden; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
